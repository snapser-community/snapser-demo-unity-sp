/*
 * my-dev-cluster
 *
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v1 SDK
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Snapser.Client.OpenAPIDateConverter;

namespace Snapser.Model
{
    /// <summary>
    /// LeaderboardsBatchIncrementScoreResponse
    /// </summary>
    [DataContract(Name = "leaderboardsBatchIncrementScoreResponse")]
    public partial class LeaderboardsBatchIncrementScoreResponse : IEquatable<LeaderboardsBatchIncrementScoreResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LeaderboardsBatchIncrementScoreResponse" /> class.
        /// </summary>
        /// <param name="incrementScoreResponses">incrementScoreResponses.</param>
        /// <param name="responses">List of responses for each user ID.</param>
        /// <param name="scoresFailed">scoresFailed.</param>
        /// <param name="scoresIncremented">scoresIncremented.</param>
        public LeaderboardsBatchIncrementScoreResponse(List<LeaderboardsIncrementScoreResponse> incrementScoreResponses = default(List<LeaderboardsIncrementScoreResponse>), List<LeaderboardsBatchIncrementScoreSingleResponse> responses = default(List<LeaderboardsBatchIncrementScoreSingleResponse>), int scoresFailed = default(int), int scoresIncremented = default(int))
        {
            this.IncrementScoreResponses = incrementScoreResponses;
            this.Responses = responses;
            this.ScoresFailed = scoresFailed;
            this.ScoresIncremented = scoresIncremented;
        }

        /// <summary>
        /// Gets or Sets IncrementScoreResponses
        /// </summary>
        [DataMember(Name = "increment_score_responses", EmitDefaultValue = false)]
        public List<LeaderboardsIncrementScoreResponse> IncrementScoreResponses { get; set; }

        /// <summary>
        /// List of responses for each user ID
        /// </summary>
        /// <value>List of responses for each user ID</value>
        [DataMember(Name = "responses", EmitDefaultValue = false)]
        public List<LeaderboardsBatchIncrementScoreSingleResponse> Responses { get; set; }

        /// <summary>
        /// Gets or Sets ScoresFailed
        /// </summary>
        [DataMember(Name = "scores_failed", EmitDefaultValue = false)]
        public int ScoresFailed { get; set; }

        /// <summary>
        /// Gets or Sets ScoresIncremented
        /// </summary>
        [DataMember(Name = "scores_incremented", EmitDefaultValue = false)]
        public int ScoresIncremented { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LeaderboardsBatchIncrementScoreResponse {\n");
            sb.Append("  IncrementScoreResponses: ").Append(IncrementScoreResponses).Append("\n");
            sb.Append("  Responses: ").Append(Responses).Append("\n");
            sb.Append("  ScoresFailed: ").Append(ScoresFailed).Append("\n");
            sb.Append("  ScoresIncremented: ").Append(ScoresIncremented).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LeaderboardsBatchIncrementScoreResponse);
        }

        /// <summary>
        /// Returns true if LeaderboardsBatchIncrementScoreResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of LeaderboardsBatchIncrementScoreResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LeaderboardsBatchIncrementScoreResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.IncrementScoreResponses == input.IncrementScoreResponses ||
                    this.IncrementScoreResponses != null &&
                    input.IncrementScoreResponses != null &&
                    this.IncrementScoreResponses.SequenceEqual(input.IncrementScoreResponses)
                ) && 
                (
                    this.Responses == input.Responses ||
                    this.Responses != null &&
                    input.Responses != null &&
                    this.Responses.SequenceEqual(input.Responses)
                ) && 
                (
                    this.ScoresFailed == input.ScoresFailed ||
                    this.ScoresFailed.Equals(input.ScoresFailed)
                ) && 
                (
                    this.ScoresIncremented == input.ScoresIncremented ||
                    this.ScoresIncremented.Equals(input.ScoresIncremented)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IncrementScoreResponses != null)
                {
                    hashCode = (hashCode * 59) + this.IncrementScoreResponses.GetHashCode();
                }
                if (this.Responses != null)
                {
                    hashCode = (hashCode * 59) + this.Responses.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ScoresFailed.GetHashCode();
                hashCode = (hashCode * 59) + this.ScoresIncremented.GetHashCode();
                return hashCode;
            }
        }

    }

}
